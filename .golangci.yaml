# See: https://olegk.dev/go-linters-configuration-the-right-version

# Complete configurations: https://golangci-lint.run/usage/configuration/

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exportloopref
    - gochecknoglobals
    - gochecknoinits
    - gocritic
    - godot
    - gofmt
    - gofumpt
    - goimports
    - gomoddirectives
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - mnd
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign

linters-settings:
  gosec:
    excludes:
      - G404

  revive:
    rules:
      - name: unused-parameter
        disabled: true

output:
  # I prefer the simplest one: `line-number` and saving to `lint.txt`
  #
  # The `tab` also looks good and with the next release I will switch to it
  # (ref: https://github.com/golangci/golangci-lint/issues/3728)
  #
  # There are more formats which can be used on CI or by your IDE.

  # No, no skips, everything should be reported.
  uniq-by-line: false

  # Slightly easier to follow the results + getting deterministic output.
  sort-results: true

issues:
  # I found it strange to skip the errors, setting 0 to have all the results.
  max-issues-per-linter: 0

  # Same here, nothing should be skipped to not miss errors.
  max-same-issues: 0

  # When set to `true` linter will analyze only new code which are
  # not committed or after some specific revision. This is a cool
  # feature when you're going to introduce linter into a big project.
  # But I prefer going gradually package by package.
  # So, it's set to `false` to scan all code.
  new: false

  # 2 other params regarding git integration

  # Even with a recent GPT-4 release I still believe that
  # I know better how to do my job and fix the suggestions.
  fix: false

  exclude-rules:
    - path: "_test\\.go"
      linters:
        - gochecknoglobals
